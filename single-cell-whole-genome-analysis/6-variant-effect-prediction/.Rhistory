geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=12) +
#scale_y_log10() +
dev.off()
ggplot(consequences_df_long, aes(x = factor(cycle), y = Count, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=12)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Count, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=12)
pdf("snv_impact_observed_cycle_all.pdf",
width = 15,
height = 20)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Count, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=12)
#scale_y_log10() +
dev.off()
knitr::opts_chunk$set(echo = TRUE)
pdf("snv_consequences_observed_cycle_all.pdf",
width = 15,
height = 20)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Count, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=12) +
facet_wrap(.~IMPACT, scale = "free", ncol = 5, labeller = label_wrap_gen(width = 40))
#scale_y_log10() +
dev.off()
pdf("snv_impact_observed_cycle_all.pdf",
width = 15,
height = 20)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Count, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=12) +
facet_wrap(.~IMPACT, scale = "free", ncol = 5, labeller = label_wrap_gen(width = 40))
#scale_y_log10() +
dev.off()
?facet_wrap
pdf("snv_impact_observed_cycle_all.pdf",
width = 15,
height = 20)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Count, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=12) +
facet_wrap(.~IMPACT, scale = "fixed", ncol = 1, labeller = label_wrap_gen(width = 40))
#scale_y_log10() +
dev.off()
pdf("snv_impact_observed_cycle_all.pdf",
width = 15,
height = 20)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Count, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=12) +
facet_wrap(.~IMPACT, scale = "fixed", nrow = 1, labeller = label_wrap_gen(width = 40))
#scale_y_log10() +
dev.off()
# set order
consequences_df_long$IMPACT <- factor(consequences_df_long, levels = c("LOW", "MODERATE", "HIGH"))
# set order
consequences_df_long$IMPACT <- factor(consequences_df_long$IMPACT, levels = c("LOW", "MODERATE", "HIGH"))
pdf("snv_impact_observed_cycle_all.pdf",
width = 15,
height = 20)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Count, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=12) +
facet_wrap(.~IMPACT, scale = "fixed", nrow = 1, labeller = label_wrap_gen(width = 40))
#scale_y_log10() +
dev.off()
pdf("snv_impact_observed_cycle_all.pdf",
width = 6,
height = 4)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Count, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=16) +
facet_wrap(.~IMPACT, scale = "fixed", nrow = 1, labeller = label_wrap_gen(width = 40))
scale_y_log10() +
dev.off()
pdf("snv_impact_observed_cycle_all.pdf",
width = 6,
height = 4)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Count, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=16) +
facet_wrap(.~IMPACT, scale = "fixed", nrow = 1, labeller = label_wrap_gen(width = 40))
scale_y_log10()
dev.off()
pdf("snv_impact_observed_cycle_all.pdf",
width = 6,
height = 4)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Count, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=16) +
facet_wrap(.~IMPACT, scale = "fixed", nrow = 1, labeller = label_wrap_gen(width = 40)) +
scale_y_log10()
dev.off()
pdf("snv_impact_observed_cycle_all.pdf",
width = 6,
height = 4)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Count, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=16) +
facet_wrap(.~IMPACT, scale = "fixed", nrow = 1, labeller = label_wrap_gen(width = 40)) +
scale_y_log10(limits = c(0, 500))
pdf("snv_impact_observed_cycle_all.pdf",
width = 6,
height = 4)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Count, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=16) +
facet_wrap(.~IMPACT, scale = "fixed", nrow = 1, labeller = label_wrap_gen(width = 40)) +
scale_y_log10(limits = c(0, 500))
pdf("snv_impact_observed_cycle_all.pdf",
width = 6,
height = 4)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Count, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=16) +
facet_wrap(.~IMPACT, scale = "fixed", nrow = 1, labeller = label_wrap_gen(width = 40)) +
scale_y_log10() +
ylim(c(0,500))
dev.off()
pdf("snv_impact_observed_cycle_all.pdf",
width = 6,
height = 4)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Count, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=16) +
facet_wrap(.~IMPACT, scale = "fixed", nrow = 1, labeller = label_wrap_gen(width = 40)) +
ylim(c(0,500)) +
scale_y_log10() +
dev.off()
pdf("snv_impact_observed_cycle_all.pdf",
width = 6,
height = 4)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Count, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=16) +
facet_wrap(.~IMPACT, scale = "fixed", nrow = 1, labeller = label_wrap_gen(width = 40)) +
ylim(c(0,500)) +
scale_y_log10()
dev.off()
pdf("snv_impact_estimated_cycle_all.pdf",
width = 6,
height = 4)
ggplot(consequences_df_long, aes(x = factor(cycle), y = SNV_est, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size=16) +
facet_wrap(.~IMPACT, scale = "fixed", nrow = 1, labeller = label_wrap_gen(width = 40)) +
scale_y_log10()
dev.off()
pdf("snv_impact_precent_cycle_all.pdf",
width = 6,
height = 4)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Percentage, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "% SNVs") +
scale_fill_Publication() +
theme_Publication(base_size=16) +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
facet_wrap(.~Consequence, scale = "fixed", ncol = 5, labeller = label_wrap_gen(width = 40))
pdf("snv_impact_precent_cycle_all.pdf",
width = 6,
height = 4)
ggplot(consequences_df_long, aes(x = factor(cycle), y = Percentage, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Cycle", y = "% SNVs") +
scale_fill_Publication() +
theme_Publication(base_size=16) +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
facet_wrap(.~IMPACT, scale = "fixed", ncol = 5, labeller = label_wrap_gen(width = 40))
dev.off()
stats_summary <- consequences_df_long %>%
group_by(condition, IMPACT) %>%
summarise(mean_log2fc = mean(Count, na.rm = TRUE),
sd_log2fc = sd(Count, na.rm = TRUE))
pdf("snv_impact_observed_condition_all.pdf",
width = 6,
height = 4)
ggplot(consequences_df_long, aes(x = condition, y = Count, fill = condition)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +  # Average bar plot
geom_errorbar(data = stats_summary, aes(x = condition, y = mean_log2fc, ymin = mean_log2fc - sd_log2fc, ymax = mean_log2fc + sd_log2fc),
width = 0.5, position = position_dodge(0.9)) +
geom_point(data = consequences_df_long, aes(x = condition, y = Count), position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
stat_compare_means(method = "t.test", label = "p.signif",  vjust = 1, hjust = -0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Group", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size = 12) +
facet_wrap(.~IMPACT, scale = "free", ncol = 5, labeller = label_wrap_gen(width = 40)) +
theme(strip.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
dev.off()
pdf("snv_impact_observed_condition_all.pdf",
width = 6,
height = 4)
ggplot(consequences_df_long, aes(x = condition, y = Count, fill = condition)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +  # Average bar plot
geom_errorbar(data = stats_summary, aes(x = condition, y = mean_log2fc, ymin = mean_log2fc - sd_log2fc, ymax = mean_log2fc + sd_log2fc),
width = 0.5, position = position_dodge(0.9)) +
geom_point(data = consequences_df_long, aes(x = condition, y = Count), position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
stat_compare_means(method = "t.test", label = "p.signif",  vjust = 1, hjust = -1) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Group", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size = 12) +
facet_wrap(.~IMPACT, scale = "free", ncol = 5, labeller = label_wrap_gen(width = 40)) +
theme(strip.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
dev.off()
stats_summary <- consequences_df_long %>%
group_by(condition, IMPACT) %>%
summarise(mean_log2fc = mean(Count, na.rm = TRUE),
sd_log2fc = sd(Count, na.rm = TRUE))
pdf("snv_impact_observed_condition_all.pdf",
width = 5,
height = 4)
ggplot(consequences_df_long, aes(x = condition, y = Count, fill = condition)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +  # Average bar plot
geom_errorbar(data = stats_summary, aes(x = condition, y = mean_log2fc, ymin = mean_log2fc - sd_log2fc, ymax = mean_log2fc + sd_log2fc),
width = 0.5, position = position_dodge(0.9)) +
geom_point(data = consequences_df_long, aes(x = condition, y = Count), position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
stat_compare_means(method = "t.test", label = "p.signif",  vjust = 1, hjust = -1) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Group", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size = 12) +
facet_wrap(.~IMPACT, scale = "free", ncol = 5, labeller = label_wrap_gen(width = 40)) +
theme(strip.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis
pdf("snv_impact_observed_condition_all.pdf",
pdf("snv_impact_observed_condition_all.pdf",
width = 5,
height = 4)
ggplot(consequences_df_long, aes(x = condition, y = Count, fill = condition)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +  # Average bar plot
geom_errorbar(data = stats_summary, aes(x = condition, y = mean_log2fc, ymin = mean_log2fc - sd_log2fc, ymax = mean_log2fc + sd_log2fc),
width = 0.5, position = position_dodge(0.9)) +
geom_point(data = consequences_df_long, aes(x = condition, y = Count), position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
stat_compare_means(method = "t.test", label = "p.signif",  vjust = 1, hjust = -1) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Group", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size = 16) +
facet_wrap(.~IMPACT, scale = "free", ncol = 5, labeller = label_wrap_gen(width = 40)) +
theme(strip.text = element_text(size = 16),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
dev.off()
pdf("snv_impact_observed_condition_all.pdf",
width = 5,
height = 4)
ggplot(consequences_df_long, aes(x = condition, y = Count, fill = condition)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +  # Average bar plot
geom_errorbar(data = stats_summary, aes(x = condition, y = mean_log2fc, ymin = mean_log2fc - sd_log2fc, ymax = mean_log2fc + sd_log2fc),
width = 0.5, position = position_dodge(0.9)) +
geom_point(data = consequences_df_long, aes(x = condition, y = Count), position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
stat_compare_means(method = "t.test", label = "p.signif",  vjust = 1, hjust = -1) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Group", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size = 16) +
facet_wrap(.~IMPACT, scale = "free", ncol = 5, labeller = label_wrap_gen(width = 40)) +
theme(strip.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
dev.off()
stats_summary <- consequences_df_long %>%
group_by(condition, IMPACT) %>%
summarise(mean_log2fc = mean(SNV_est, na.rm = TRUE),
sd_log2fc = sd(SNV_est, na.rm = TRUE))
pdf("snv_impact_estimated_condition_all.pdf",
width = 5,
height = 4)
ggplot(consequences_df_long, aes(x = condition, y = SNV_est, fill = condition)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +  # Average bar plot
geom_errorbar(data = stats_summary, aes(x = condition, y = mean_log2fc, ymin = mean_log2fc - sd_log2fc, ymax = mean_log2fc + sd_log2fc),
width = 0.5, position = position_dodge(0.9)) +
geom_point(data = consequences_df_long, aes(x = condition, y = SNV_est), position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
stat_compare_means(method = "t.test", label = "p.signif",  vjust = 1, hjust = -0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Group", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size = 16) +
facet_wrap(.~IMPACT, scale = "free", ncol = 4, labeller = label_wrap_gen(width = 40)) +
theme(strip.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
dev.off()
stats_summary <- consequences_df_long %>%
group_by(condition, IMPACT) %>%
summarise(mean_log2fc = mean(Percentage, na.rm = TRUE),
sd_log2fc = sd(Percentage, na.rm = TRUE))
pdf("snv_consequences_precent_condition_all.pdf",
width = 5,
height = 24
ggplot(consequences_df_long, aes(x = condition, y = Percentage, fill = condition)) +
stats_summary <- consequences_df_long %>%
group_by(condition, IMPACT) %>%
summarise(mean_log2fc = mean(Percentage, na.rm = TRUE),
sd_log2fc = sd(Percentage, na.rm = TRUE))
pdf("snv_impact_precent_condition_all.pdf",
width = 5,
height = 4)
ggplot(consequences_df_long, aes(x = condition, y = Percentage, fill = condition)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +  # Average bar plot
geom_errorbar(data = stats_summary, aes(x = condition, y = mean_log2fc, ymin = mean_log2fc - sd_log2fc, ymax = mean_log2fc + sd_log2fc),
width = 0.5, position = position_dodge(0.9)) +
geom_point(data = consequences_df_long, aes(x = condition, y = Percentage), position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
stat_compare_means(method = "t.test", label = "p.signif",  vjust = 1, hjust = -0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Group", y = "% SNVs Per Cell") +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
scale_fill_Publication() +
theme_Publication(base_size = 16) +
facet_wrap(.~IMPACT, scale = "free", ncol = 4, labeller = label_wrap_gen(width = 40)) +
theme(strip.text = element_text(size = 14),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
dev.off()
pdf("snv_impact_precent_condition_all.pdf",
width = 5,
height = 4)
ggplot(consequences_df_long, aes(x = condition, y = Percentage, fill = condition)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +  # Average bar plot
geom_errorbar(data = stats_summary, aes(x = condition, y = mean_log2fc, ymin = mean_log2fc - sd_log2fc, ymax = mean_log2fc + sd_log2fc),
width = 0.5, position = position_dodge(0.9)) +
geom_point(data = consequences_df_long, aes(x = condition, y = Percentage), position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
stat_compare_means(method = "t.test", label = "p.signif",  vjust = 1, hjust = -0.5) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Group", y = "% SNVs Per Cell") +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
scale_fill_Publication() +
theme_Publication(base_size = 16) +
facet_wrap(.~IMPACT, scale = "free", ncol = 4, labeller = label_wrap_gen(width = 40)) +
theme(strip.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
dev.off()
stats_summary <- consequences_df_long %>%
group_by(condition, IMPACT) %>%
summarise(mean_log2fc = mean(SNV_est, na.rm = TRUE),
sd_log2fc = sd(SNV_est, na.rm = TRUE))
pdf("snv_impact_estimated_condition_all.pdf",
width = 5,
height = 4)
ggplot(consequences_df_long, aes(x = condition, y = SNV_est, fill = condition)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +  # Average bar plot
geom_errorbar(data = stats_summary, aes(x = condition, y = mean_log2fc, ymin = mean_log2fc - sd_log2fc, ymax = mean_log2fc + sd_log2fc),
width = 0.5, position = position_dodge(0.9)) +
geom_point(data = consequences_df_long, aes(x = condition, y = SNV_est), position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
stat_compare_means(method = "t.test", label = "p.signif",  vjust = 1, hjust = -1) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Group", y = "Estimated SNVs Per Cell") +
scale_fill_Publication() +
theme_Publication(base_size = 16) +
facet_wrap(.~IMPACT, scale = "free", ncol = 4, labeller = label_wrap_gen(width = 40)) +
theme(strip.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
dev.off()
stats_summary <- consequences_df_long %>%
group_by(condition, IMPACT) %>%
summarise(mean_log2fc = mean(Percentage, na.rm = TRUE),
sd_log2fc = sd(Percentage, na.rm = TRUE))
pdf("snv_impact_precent_condition_all.pdf",
width = 5,
height = 4)
ggplot(consequences_df_long, aes(x = condition, y = Percentage, fill = condition)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge") +  # Average bar plot
geom_errorbar(data = stats_summary, aes(x = condition, y = mean_log2fc, ymin = mean_log2fc - sd_log2fc, ymax = mean_log2fc + sd_log2fc),
width = 0.5, position = position_dodge(0.9)) +
geom_point(data = consequences_df_long, aes(x = condition, y = Percentage), position = position_jitterdodge(jitter.width = 0.2), size = 2, alpha = 0.5) +
stat_compare_means(method = "t.test", label = "p.signif",  vjust = 1, hjust = -1) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
labs(x = "Group", y = "% SNVs Per Cell") +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
scale_fill_Publication() +
theme_Publication(base_size = 16) +
facet_wrap(.~IMPACT, scale = "free", ncol = 4, labeller = label_wrap_gen(width = 40)) +
theme(strip.text = element_text(size = 12),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
dev.off()
vep_list[[21]]$DISTANCE
as.numeric(vep_list[[21]]$DISTANCE)
hist(as.numeric(vep_list[[21]]$DISTANCE))
vep_list[[21]]$GENE_PHENO
table(vep_list[[21]]$GENE_PHENO)
# predicts whether an amino acid substitution affects protein function based on sequence homology and the physical properties of amino acids
table(vep_list[[21]]$SIFT)
vep_list[[21]]$SIFT
table(vep_list[[21]]$PolyPhen)
table(vep_list[[21]]$DOMAINS)
table(vep_list[[21]]$SOMATIC)
table(vep_list[[21]]$CLIN_SIG)
table(vep_list[[21]]$PHENO)
table(vep_list[[21]]$SOMATIC)
table(vep_list[[21]]$MOTIF_NAME)
table(vep_list[[21]]$MOTIF_SCORE_CHANGE)
table(vep_list[[21]]$HIGH_INF_POS)
table(vep_list[[21]]$TRANSCRIPTION_FACTORS)
table(vep_list[[21]]$BLOSUM62)
table(vep_list[[21]]$CAROL) # Combined Annotation scoRing toOL
table(vep_list[[21]]$Conservation) # Combined Annotation scoRing toOL
table(vep_list[[21]]$MPC)
table(vep_list[[21]]$NearestGene)
table(vep_list[[21]]$NMD)
# distance to TSS
hist(as.numeric(vep_list[[21]]$DISTANCE))
# distance to TSS
hist(as.numeric(vep_list[[11]]$DISTANCE))
# predicts whether an amino acid substitution affects protein function based on sequence homology and the physical properties of amino acids
table(vep_list[[21]]$SIFT)
# possible impact of an amino acid substitution on the structure and function of a human protein using straightforward physical and comparative considerations
table(vep_list[[21]]$PolyPhen)
# conservation
table(vep_list[[21]]$BLOSUM62) # log-odds score that provides a measure of the biological probability of a substitution relative to the chance probability of the substitution
table(vep_list[[21]]$CAROL) # Combined Annotation scoRing toOL
table(vep_list[[21]]$MOTIF_NAME) # source and identifier of a transcription factor binding profile aligned at this position
table(vep_list[[21]]$HIGH_INF_POS) # indicating if the variant falls in a high information position of a transcription factor binding profile
table(vep_list[[21]]$MOTIF_SCORE_CHANGE) # difference in motif score of the reference and variant sequences for the TFBP
table(vep_list[[21]]$MOTIF_NAME) # source and identifier of a transcription factor binding profile aligned at this position
table(vep_list[[21]]$HIGH_INF_POS) # indicating if the variant falls in a high information position of a transcription factor binding profile
