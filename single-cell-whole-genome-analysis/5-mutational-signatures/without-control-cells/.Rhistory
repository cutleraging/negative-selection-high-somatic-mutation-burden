# compare original vs reconstructed
pdf("SNV_de_novo_signature_profile_reconstruction.pdf",
width = 5,
height = 5)
plot_original_vs_reconstructed(mut_mat_all, nmf_res_snv$reconstructed,
y_intercept = 0.95)
dev.off()
# plot contribution
pdf("SNV_de_novo_profile_contribution_relative.pdf",
width = 4,
height = 5)
plot_contribution(nmf_res_snv$contribution,
nmf_res_snv$signature,
mode = "relative",
coord_flip = TRUE,
index = c(7:9, 13:15, 1:6, 10:12, 16:18)) +
theme_Publication(base_size = 14)
dev.off()
pdf("SNV_de_novo_profile_contribution_absolute.pdf",
width = 4,
height = 5)
plot_contribution(nmf_res_snv$contribution,
nmf_res_snv$signature,
mode = "absolute",
coord_flip = TRUE,
index = c(7:9, 13:15, 1:6, 10:12, 16:18)) +
theme_Publication(base_size = 14)
dev.off()
pdf("SNV_de_novo_profile_contribution_heatmap.pdf",
width = 10,
height = 5)
plot_contribution_heatmap(nmf_res_snv$contribution,
cluster_samples = TRUE,
cluster_sigs = TRUE)
dev.off()
pdf("SNV_de_novo_profile_contribution_heatmap.pdf",
width = 5,
height = 5)
plot_contribution_heatmap(nmf_res_snv$contribution,
cluster_samples = TRUE,
cluster_sigs = TRUE)
dev.off()
# similarity
cos_sim_samples_signatures <- cos_sim_matrix(mut_mat_all, nmf_res_snv$signature)
pdf("SNV_de_novo_signature_cosine_heatmap.pdf",
width = 10,
height = 5)
plot_cosine_heatmap(cos_sim_samples_signatures,
cluster_rows = TRUE, cluster_cols = TRUE)
dev.off()
pdf("SNV_de_novo_signature_cosine_heatmap.pdf",
width = 5,
height = 5)
plot_cosine_heatmap(cos_sim_samples_signatures,
cluster_rows = TRUE, cluster_cols = TRUE)
dev.off()
pdf("SNV_refit_profile_contribution_heatmap.pdf",
width = 5,
height = 5)
plot_contribution_heatmap(fit_res_snv$fit_res$contribution,
cluster_samples = TRUE,
cluster_sigs = TRUE)
dev.off()
pdf("SNV_refit_profile_contribution_heatmap.pdf",
width = 10,
height = 5)
plot_contribution_heatmap(fit_res_snv$fit_res$contribution,
cluster_samples = TRUE,
cluster_sigs = TRUE)
dev.off()
?cos_sim_matrix
pdf("SNV_sample_cosine_heatmap.pdf",
width = 5,
height = 5)
plot_cosine_heatmap(cos_sim_samples, cluster_rows = TRUE, cluster_cols = TRUE)
# get similarity between samples
cos_sim_samples <- cos_sim_matrix(mut_mat_all, mut_mat_all)
pdf("SNV_sample_cosine_heatmap.pdf",
width = 5,
height = 5)
plot_cosine_heatmap(cos_sim_samples, cluster_rows = TRUE, cluster_cols = TRUE)
dev.off()
?plot_bootstrapped_contribution
# bootstrapped refitting to ensure stability
contri_boots <- fit_to_signatures_bootstrapped(mut_mat_all,
nmf_res_snv$signatures,
n_boots = 1000,
method = "strict"
)
pdf("SNV_de_novo_signature_bootstrap.pdf",
width = 10,
height = 4)
plot_bootstrapped_contribution(contri_boots,
mode = "relative")
dev.off()
pdf("SNV_de_novo_signature_bootstrap.pdf",
width = 10,
height = 10)
plot_bootstrapped_contribution(contri_boots,
mode = "relative")
dev.off()
pdf("SNV_de_novo_signature_bootstrap.pdf",
width = 4,
height = 15)
plot_bootstrapped_contribution(contri_boots,
mode = "relative")
dev.off()
# bootstrapped refitting to ensure stability
contri_boots <- fit_to_signatures_bootstrapped(mut_mat_all,
cosmic_signatures,
n_boots = 1000,
method = "strict"
)
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Vijg-lab/Projects/mutation\ accumulation/annotation/rna")
# rna expression table
rna <- read.table("ENCFF245ZOB-IMR90-total-RNA-seq-hg19.tsv", header = TRUE)
# remove version from ensemble gene id
rna$gene_id <- gsub("\\..*", "", rna$gene_id)
# plot TPM distribution
nrow(rna)
hist(log2(rna$TPM))
# zFPKM calculation
zfpkm <- zFPKM(rna[,"TPM", drop = FALSE])
BiocManager::install("zFPKM")
library(zFPKM)
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Vijg-lab/Projects/mutation\ accumulation/annotation/rna")
# rna expression table
rna <- read.table("ENCFF245ZOB-IMR90-total-RNA-seq-hg19.tsv", header = TRUE)
# remove version from ensemble gene id
rna$gene_id <- gsub("\\..*", "", rna$gene_id)
# plot TPM distribution
nrow(rna)
hist(log2(rna$TPM))
# zFPKM calculation
zfpkm <- zFPKM(rna[,"TPM", drop = FALSE])
zFPKMPlot(rna[,"TPM", drop = FALSE])
# plot zfpkm  distribution
hist(zfpkm$TPM)
# keep genes with > -3 zfpkm
rna.filter <- rna[zfpkm$TPM > -3,]
# plot filtered TPM distribution
nrow(rna.filter)
hist(log2(rna.filter$TPM))
# get non-redundent list of gene_id
expressed_genes <- unique(rna.filter$gene_id)
expressed_genes
mut_mat_all
?context_potential_damage_analysis
mut_mat
contexts <- rownames(mut_mat_all)
context_mismatches <- context_potential_damage_analysis(contexts, TxDb.Hsapiens.UCSC.hg19.knownGene, BSgenome.Hsapiens.UCSC.hg19, expressed_genes)
head(context_mismatches)
context_mismatches
nmf_res_snv$signatures
# get the ratios per signature
sig_damage <- signature_potential_damage_analysis(nmf_res_snv$signatures, contexts, context_mismatches)
sig_damage
sig_damage <- sig_damage[order(sig_damage$ratio_by_background, decreasing = TRUE),]
sig_damage
?signature_potential_damage_analysis
expressed_genes
?context_potential_damage_analysis
rna.filter$
dds
?useEnsembl
library(biomaRt)
ensembl <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
gene_names <- getBM(attributes = c('ensembl_gene_id', 'external_gene_name', 'entrezgene_id'),
filters = 'ensembl_gene_id',
values = rna$gene_id,
mart = ensembl)
rna.filter <- merge(rna.filter, gene_names, by.x = "gene_id", by.y = "ensembl_gene_id")
sum(duplicated(rna.filter$entrezgene_id))
rna.filter <- rna.filter[!duplicated(rna.filter$entrezgene_id),] # remove duplicates
contexts <- rownames(mut_mat_all)
context_mismatches <- context_potential_damage_analysis(contexts, TxDb.Hsapiens.UCSC.hg19.knownGene, BSgenome.Hsapiens.UCSC.hg19, rna.filter$entrezgene_id)
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Vijg-lab/Projects/mutation\ accumulation/231009\ multiple\ ENU\ analysis/4-mutational-signatures/without-control-cells")
# add small pseudocount
indel_counts <- indel_counts + 0.0001
# generate an estimate rank plot
estimate <- nmf(indel_counts, rank = 2:5, method = "brunet",
nrun = 10, seed = 123456, .opt = "v-p")
# run same estimation on randomized data
rV <- randomize(indel_counts)
rand <- nmf(rV, rank = 2:5, method = "brunet",
nrun = 10, seed = 123456, .opt = "v-p")
# plot
pdf("INDEL_NMF_rank_survey_estimate.pdf",
width = 5,
height = 5)
plot(estimate)
dev.off()
pdf("INDEL_NMF_rank_survey_random.pdf",
width = 5,
height = 5)
plot(rand)
dev.off()
warnings()
indel_counts
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Vijg-lab/Projects/mutation\ accumulation/231009\ multiple\ ENU\ analysis/4-mutational-signatures/without-control-cells")
# get similarity between samples
cos_sim_samples <- cos_sim_matrix(indel_counts, indel_counts)
pdf("INDEL_sample_cosine_heatmap.pdf",
width = 5,
height = 5)
plot_cosine_heatmap(cos_sim_samples, cluster_rows = TRUE, cluster_cols = TRUE)
dev.off()
cos_sim_samples
indel_counts
mutations_indel
indel_grl <- get_indel_context(mutations_indel, BSgenome.Hsapiens.UCSC.hg19)
indel_counts <- count_indel_contexts(indel_grl)
# add small pseudocount
indel_counts <- indel_counts + 0.0001
indel_counts
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Vijg-lab/Projects/mutation\ accumulation/231009\ multiple\ ENU\ analysis/4-mutational-signatures/without-control-cells")
# add small pseudocount
indel_counts <- indel_counts + 0.0001
# generate an estimate rank plot
estimate <- nmf(indel_counts, rank = 2:5, method = "brunet",
nrun = 10, seed = 123456, .opt = "v-p")
# run same estimation on randomized data
rV <- randomize(indel_counts)
rand <- nmf(rV, rank = 2:5, method = "brunet",
nrun = 10, seed = 123456, .opt = "v-p")
# plot
pdf("INDEL_NMF_rank_survey_estimate.pdf",
width = 5,
height = 5)
plot(estimate)
dev.off()
pdf("INDEL_NMF_rank_survey_random.pdf",
width = 5,
height = 5)
plot(rand)
dev.off()
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Vijg-lab/Projects/mutation\ accumulation/231009\ multiple\ ENU\ analysis/4-mutational-signatures/without-control-cells")
# get similarity between samples
cos_sim_samples <- cos_sim_matrix(indel_counts, indel_counts)
pdf("INDEL_sample_cosine_heatmap.pdf",
width = 5,
height = 5)
plot_cosine_heatmap(cos_sim_samples, cluster_rows = TRUE, cluster_cols = TRUE)
dev.off()
# compare to known signatures
cosmic_signatures = get_known_signatures(incl_poss_artifacts = TRUE)
nmf_res_snv <- rename_nmf_signatures(nmf_res_snv, cosmic_signatures, cutoff = 0.85)
nmf_res_snv
# extract signatures
nmf_res_indel <- extract_signatures(indel_counts,
rank = 2,
nrun = 1000,
nmf_type = "regular",
single_core = FALSE)
contri_boots <- fit_to_signatures_bootstrapped(mut_mat_snv,
cosmic_signatures,
n_boots = 1000,
method = "strict"
)
# by cell
mut_mat_snv <- mut_matrix(mutations_snv, BSgenome.Hsapiens.UCSC.hg19)
fit_res_snv <- fit_to_signatures_strict(mut_mat_snv, cosmic_signatures)
# bootstrapped refitting to ensure stability
contri_boots <- fit_to_signatures_bootstrapped(mut_mat_snv,
cosmic_signatures,
n_boots = 1000,
method = "strict"
)
pdf("SNV_refit_signature_bootstrap.pdf",
width = 10,
height = 4)
plot_bootstrapped_contribution(contri_boots,
mode = "relative")
dev.off()
contri_boots
fit_res_snv$fit_res$contribution
pdf("SNV_refit_signature_bootstrap.pdf",
width = 50,
height = 50)
plot_bootstrapped_contribution(contri_boots,
mode = "relative")
dev.off()
etwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Vijg-lab/Projects/mutation\ accumulation/231009\ multiple\ ENU\ analysis/4-mutational-signatures/without-control-cells")
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Vijg-lab/Projects/mutation\ accumulation/231009\ multiple\ ENU\ analysis/4-mutational-signatures/without-control-cells")
# get similarity between samples
cos_sim_samples <- cos_sim_matrix(indel_counts, indel_counts)
pdf("INDEL_sample_cosine_heatmap.pdf",
width = 5,
height = 5)
plot_cosine_heatmap(cos_sim_samples, cluster_rows = TRUE, cluster_cols = TRUE)
dev.off()
# extract signatures
nmf_res_indel <- extract_signatures(indel_counts,
rank = 2,
nrun = 1000,
nmf_type = "regular",
single_core = FALSE)
nmf_res_indel\
nmf_res_indel
cosmic_signatures = get_known_signatures(incl_poss_artifacts = TRUE)
nmf_res_indel <- rename_nmf_signatures(nmf_res_indel, cosmic_signatures, cutoff = 0.85)
nmf_res_indel
rename_nmf_signatures
?rename_nmf_signatures
?get_known_signatures
# compare to known signatures
indel_signatures = get_known_signatures(muttype = "indel", incl_poss_artifacts = TRUE)
nmf_res_indel <- rename_nmf_signatures(nmf_res_indel, cosmic_signatures, cutoff = 0.85)
nmf_res_indel <- rename_nmf_signatures(nmf_res_indel, indel_signatures, cutoff = 0.85)
nmf_res_indel
pdf("INDEL_de_novo_signature_profile.pdf",
width = 8,
height = 4)
plot_96_profile(nmf_res_indel$signatures,
ymax= 0.06,
condensed = TRUE) +
scale_y_continuous(breaks = seq(0, 0.1, by = 0.01))
pdf("INDEL_de_novo_signature_profile.pdf",
width = 15,
height = 20)
plot_indel_contexts(nmf_res_indel$signatures,
same_y = TRUE,
extra_labels = FALSE,
condensed = TRUE)
dev.off()
nmf_res_indel$signatures
pdf("INDEL_de_novo_signature_context.pdf",
width = 10,
height = 5)
plot_indel_contexts(nmf_res_indel$signatures,
same_y = TRUE,
extra_labels = FALSE,
condensed = TRUE) +
theme_Publication(base_size = 12) +
theme(axis.text.x = element_text(size = 5),
legend.position = "right",
legend.direction = "vertical",
strip.text = element_text(size = 10)) +
labs(y = "No. INDELs", x = "No. repeat units")
dev.off()
pdf("INDEL_de_novo_signature_main_context.pdf",
width = 4,
height = 4)
plot_main_indel_contexts(indel_counts,
same_y = TRUE) +
theme_Publication(base_size = 12) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "right",
legend.direction = "vertical",
strip.text = element_text(size = 10)) +
labs(y = "No. INDELs")
dev.off()
pdf("INDEL_de_novo_signature_context.pdf",
width = 10,
height = 5)
plot_indel_contexts(nmf_res_indel$signatures,
same_y = TRUE,
extra_labels = FALSE,
condensed = TRUE) +
theme_Publication(base_size = 12) +
theme(axis.text.x = element_text(size = 5),
legend.position = "right",
legend.direction = "vertical",
strip.text = element_text(size = 10)) +
labs(y = "Relative contribution", x = "No. repeat units")
dev.off()
pdf("INDEL_de_novo_signature_main_context.pdf",
width = 4,
height = 4)
plot_main_indel_contexts(indel_counts,
same_y = TRUE) +
theme_Publication(base_size = 12) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "right",
legend.direction = "vertical",
strip.text = element_text(size = 10)) +
labs(y = "Relative contribution")
dev.off()
pdf("INDEL_de_novo_signature_main_context.pdf",
width = 4,
height = 4)
plot_main_indel_contexts(nmf_res_indel$signatures,
same_y = TRUE) +
theme_Publication(base_size = 12) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "right",
legend.direction = "vertical",
strip.text = element_text(size = 10)) +
labs(y = "Relative contribution")
dev.off()
pdf("INDEL_de_novo_signature_profile_reconstruction.pdf",
width = 5,
height = 5)
plot_original_vs_reconstructed(mut_mat_indel, nmf_res_indel$reconstructed,
y_intercept = 0.95)
pdf("INDEL_de_novo_signature_profile_reconstruction.pdf",
width = 5,
height = 5)
plot_original_vs_reconstructed(indel_counts, nmf_res_indel$reconstructed,
y_intercept = 0.95)
dev.off()
nmf_res_indel$signature
pdf("INDEL_de_novo_profile_contribution_relative.pdf",
width = 4,
height = 5)
plot_contribution(nmf_res_indel$contribution,
nmf_res_indel$signature,
mode = "relative",
coord_flip = TRUE,
index = c(7:9, 13:15, 1:6, 10:12, 16:18)) +
theme_Publication(base_size = 14)
dev.off()
pdf("INDEL_de_novo_profile_contribution_absolute.pdf",
width = 4,
height = 5)
plot_contribution(nmf_res_indel$contribution,
nmf_res_indel$signature,
mode = "absolute",
coord_flip = TRUE,
index = c(7:9, 13:15, 1:6, 10:12, 16:18)) +
theme_Publication(base_size = 14)
dev.off()
pdf("INDEL_de_novo_profile_contribution_heatmap.pdf",
width = 5,
height = 5)
plot_contribution_heatmap(nmf_res_indel$contribution,
cluster_samples = TRUE,
cluster_sigs = TRUE)
dev.off()
# similarity between samples at signature level
cos_sim_samples_signatures <- cos_sim_matrix(indel_counts, nmf_res_indel$signature)
pdf("INDEL_de_novo_signature_cosine_heatmap.pdf",
width = 5,
height = 5)
plot_cosine_heatmap(cos_sim_samples_signatures,
cluster_rows = TRUE, cluster_cols = TRUE)
dev.off()
pdf("INDEL_de_novo_profile_contribution_absolute.pdf",
width = 4,
height = 5)
plot_contribution(nmf_res_indel$contribution,
nmf_res_indel$signature,
mode = "absolute",
coord_flip = TRUE,
index = c(7:9, 13:15, 1:6, 10:12, 16:18)) +
theme_Publication(base_size = 14)
dev.off()
pdf("INDEL_de_novo_profile_contribution_heatmap.pdf",
width = 5,
height = 5)
plot_contribution_heatmap(nmf_res_indel$contribution,
cluster_samples = TRUE,
cluster_sigs = TRUE)
dev.off()
# similarity between samples at signature level
cos_sim_samples_signatures <- cos_sim_matrix(indel_counts, nmf_res_indel$signature)
pdf("INDEL_de_novo_signature_cosine_heatmap.pdf",
width = 5,
height = 5)
plot_cosine_heatmap(cos_sim_samples_signatures,
cluster_rows = TRUE, cluster_cols = TRUE)
dev.off()
fit_res_INDEL <- fit_to_signatures_strict(mut_mat_INDEL, indel_signatures)
fit_res_INDEL <- fit_to_signatures_strict(indel_counts, indel_signatures)
fit_res_INDEL
pdf("INDEL_refit_signature_profile_reconstruction.pdf",
width = 5,
height = 5)
plot_original_vs_reconstructed(indel_counts, fit_res_INDEL$fit_res$reconstructed,
y_intercept = 0.95)
dev.off()
pdf("INDEL_refit_signature_profile_contribution_relative.pdf",
width = 8,
height = 8)
plot_contribution(fit_res_INDEL$fit_res$contribution,
mode = "relative",
coord_flip = TRUE,
index = c(7:9, 13:15, 1:6, 10:12, 16:18)) +
theme_Publication(base_size = 14)
dev.off()
pdf("INDEL_refit_signature_profile_contribution_absolute.pdf",
width = 8,
height = 8)
plot_contribution(fit_res_INDEL$fit_res$contribution,
mode = "absolute",
coord_flip = TRUE,
index = c(7:9, 13:15, 1:6, 10:12, 16:18)) +
theme_Publication(base_size = 14)
dev.off()
pdf("INDEL_refit_profile_contribution_heatmap.pdf",
width = 10,
height = 5)
plot_contribution_heatmap(fit_res_INDEL$fit_res$contribution,
cluster_samples = TRUE,
cluster_sigs = TRUE)
dev.off()
# similarity between samples at signature level
cos_sim_samples_signatures <- cos_sim_matrix(indel_counts, cosmic_signatures)
?cos_sim_matrix
cos_sim_samples_signatures <- cos_sim_matrix(indel_counts, indel_signatures)
pdf("INDEL_refit_signature_cosine_heatmap.pdf",
width = 10,
height = 5)
plot_cosine_heatmap(cos_sim_samples_signatures,
cluster_rows = TRUE, cluster_cols = TRUE)
dev.off()
# get the ratio of “stop gain”, “mismatch”, “synonymous” and “splice site” mutations can be determined per genomic context
contexts <- rownames(indel_counts)
context_mismatches <- context_potential_damage_analysis(contexts, TxDb.Hsapiens.UCSC.hg19.knownGene, BSgenome.Hsapiens.UCSC.hg19, rna.filter$entrezgene_id)
