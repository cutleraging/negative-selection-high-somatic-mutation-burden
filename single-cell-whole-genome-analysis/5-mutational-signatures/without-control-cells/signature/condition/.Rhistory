labs(y = "No. INDELs", x = "No. repeat units")
dev.off()
write.csv(indel_counts_condition, "indel_counts_condition.csv", quote = FALSE)
pdf("INDEL_main_context_condition.pdf",
width = 4,
height = 4)
plot_main_indel_contexts(indel_counts_condition,
same_y = TRUE) +
theme_Publication(base_size = 12) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "right",
legend.direction = "vertical",
strip.text = element_text(size = 5)) +
labs(y = "No. INDELs")
dev.off()
# by condition_cycle
indel_grl <- get_indel_context(mutations_indel_condition_cycle, BSgenome.Hsapiens.UCSC.hg19)
indel_counts_cycle <- count_indel_contexts(indel_grl)
colnames(indel_counts_cycle) <- c("Control Cycle 9", "ENU Cycle 3", "ENU Cycle 6", "ENU Cycle 9")
pdf("INDEL_context_condition_cycle.pdf",
width = 10,
height = 5)
plot_indel_contexts(indel_counts_cycle,
same_y = TRUE,
extra_labels = FALSE,
condensed = TRUE) +
theme_Publication(base_size = 12) +
theme(axis.text.x = element_text(size = 5),
legend.position = "right",
legend.direction = "vertical",
strip.text = element_text(size = 10),
legend.text = element_text(size = 8)) +
labs(y = "No. INDELs", x = "No. repeat units")
dev.off()
pdf("INDEL_context_condition_cycle.pdf",
width = 4,
height = 5)
plot_main_indel_contexts(indel_counts_cycle,
same_y = TRUE) +
theme_Publication(base_size = 12) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "right",
legend.direction = "vertical",
strip.text = element_text(size = 5)) +
labs(y = "No. INDELs")
dev.off()
# Chunk 9
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Vijg-lab/Projects/mutation\ accumulation/231009\ multiple\ ENU\ analysis/4-mutational-signatures/without-control-cells/signature/condition")
# generate an estimate rank plot
estimate <- nmf(mut_mat_condition, rank = 2:5, method = "brunet",
nrun = 10, seed = 123456, .opt = "v-p")
# run same estimation on randomized data
rV <- randomize(mut_mat_condition)
rand <- nmf(rV, rank = 2:5, method = "brunet",
nrun = 10, seed = 123456, .opt = "v-p")
# plot
pdf("SNV_NMF_rank_survey_estimate.pdf",
width = 5,
height = 5)
plot(estimate)
dev.off()
pdf("SNV_NMF_rank_survey_random.pdf",
width = 5,
height = 5)
plot(rand)
dev.off()
# Chunk 10
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Vijg-lab/Projects/mutation\ accumulation/231009\ multiple\ ENU\ analysis/4-mutational-signatures/without-control-cells/signature/condition")
# get similarity between samples
# cos_sim_samples <- cos_sim_matrix(mut_mat_condition, mut_mat_condition)
#
# pdf("SNV_sample_cosine_heatmap.pdf",
#     width = 5,
#     height = 5)
# plot_cosine_heatmap(cos_sim_samples, cluster_rows = TRUE, cluster_cols = TRUE)
# dev.off()
# extract signatures
nmf_res_snv <- extract_signatures(mut_mat_condition,
rank = 2,
nrun = 1000,
nmf_type = "regular",
single_core = FALSE)
# name signatures
colnames(nmf_res_snv$signatures) <- c("SBSA", "SBSB")
rownames(nmf_res_snv$contribution) <- c("SBSA", "SBSB")
write.csv(nmf_res_snv, "nmf_res_snv.csv", quote = FALSE)
# plot profile
pdf("SNV_de_novo_signature_profile.pdf",
width = 7,
height = 4)
plot_96_profile(nmf_res_snv$signatures,
ymax= 0.06,
condensed = TRUE) +
scale_y_continuous(breaks = seq(0, 0.1, by = 0.01))
dev.off()
# compare original vs reconstructed
pdf("SNV_de_novo_signature_profile_reconstruction.pdf",
width = 5,
height = 5)
plot_original_vs_reconstructed(mut_mat_condition, nmf_res_snv$reconstructed,
y_intercept = 0.95)
dev.off()
# plot contribution
pdf("SNV_de_novo_profile_contribution_relative.pdf",
width = 4,
height = 5)
plot_contribution(nmf_res_snv$contribution,
nmf_res_snv$signature,
mode = "relative",
coord_flip = TRUE) +
theme_Publication(base_size = 14)
dev.off()
pdf("SNV_de_novo_profile_contribution_absolute.pdf",
width = 4,
height = 5)
plot_contribution(nmf_res_snv$contribution,
nmf_res_snv$signature,
mode = "absolute",
coord_flip = TRUE) +
theme_Publication(base_size = 14)
dev.off()
pdf("SNV_de_novo_profile_contribution_heatmap.pdf",
width = 5,
height = 5)
plot_contribution_heatmap(nmf_res_snv$contribution,
cluster_samples = TRUE,
cluster_sigs = TRUE)
dev.off()
# similarity between samples at signature level
cos_sim_samples_signatures <- cos_sim_matrix(mut_mat_condition, nmf_res_snv$signature)
pdf("SNV_de_novo_signature_cosine_heatmap.pdf",
width = 5,
height = 5)
plot_cosine_heatmap(cos_sim_samples_signatures,
cluster_rows = TRUE, cluster_cols = TRUE)
dev.off()
# Chunk 11
# compare to known signatures
cosmic_signatures = get_known_signatures(muttype = "snv",
source = "COSMIC",
tissue_type = NULL,
incl_poss_artifacts = TRUE)
# get cosine similarity of all COSMIC signatures to the denovo
# SBSA
sbsa.cos_sim_all <- apply(cosmic_signatures, 2, function(x) cos_sim(x, nmf_res_snv$signatures[,"SBSA"]))
sbsa.cos_sim_all <- sbsa.cos_sim_all[order(sbsa.cos_sim_all, decreasing = TRUE)]
pdf("SNV_signature_refit_COSMIC_SBSA_vs_SBS40.pdf",
width = 7,
height = 4)
plot_compare_profiles(nmf_res_snv$signatures[,"SBSA"],
cosmic_signatures[, "SBS40"],
profile_names = c("SBSA", "SBS40"),
profile_ymax = 0.06,
condensed = TRUE)
dev.off()
# SBSB
sbsb.cos_sim_all <- apply(cosmic_signatures, 2, function(x) cos_sim(x, nmf_res_snv$signatures[,"SBSB"]))
sbsb.cos_sim_all <- sbsb.cos_sim_all[order(sbsb.cos_sim_all, decreasing = TRUE)]
pdf("SNV_signature_refit_COSMIC_SBSB_vs_SBS5.pdf",
width = 7,
height = 4)
plot_compare_profiles(nmf_res_snv$signatures[,"SBSB"],
cosmic_signatures[, "SBS5"],
profile_names = c("SBSB", "SBS5"),
profile_ymax = 0.06,
condensed = TRUE
)
dev.off()
pdf("SNV_signature_refit_COSMIC_SBSB_vs_SBS25.pdf",
width = 7,
height = 4)
plot_compare_profiles(nmf_res_snv$signatures[,"SBSB"],
cosmic_signatures[, "SBS25"],
profile_names = c("SBSB", "SBS25"),
profile_ymax = 0.06,
condensed = TRUE
)
dev.off()
# bootstrapped refitting to ensure stability
# contri_boots <- fit_to_signatures_bootstrapped(mut_mat_condition,
#   cosmic_signatures,
#   n_boots = 1000,
#   method = "strict"
# )
#
# pdf("SNV_refit_signature_bootstrap.pdf",
#     width = 10,
#     height = 10)
# plot_bootstrapped_contribution(contri_boots,
#                                mode = "relative")
# dev.off()
# get top 10 COSMIC signatures that correalte the bset to each de novo signature
combined_top <- unique(c(names(sbsa.cos_sim_all[1:10]), names(sbsb.cos_sim_all[1:10])))
fit_res_snv <- fit_to_signatures_strict(mut_mat_condition, cosmic_signatures[,colnames(cosmic_signatures) %in% combined_top], max_delta = 0.002, method = "best_subset")
# compare original vs reconstructed
pdf("SNV_signature_refit_COSMIC_profile_reconstruction.pdf",
width = 5,
height = 5)
plot_original_vs_reconstructed(mut_mat_condition, fit_res_snv$fit_res$reconstructed,
y_intercept = 0.95)
dev.off()
# plot contribution
pdf("SNV_signature_refit_COSMIC_profile_contribution_relative.pdf",
width = 5,
height = 5)
plot_contribution(fit_res_snv$fit_res$contribution,
mode = "relative",
coord_flip = FALSE) +
theme_Publication(base_size = 14)
dev.off()
pdf("SNV_signature_refit_COSMIC_profile_contribution_absolute.pdf",
width = 8,
height = 8)
plot_contribution(fit_res_snv$fit_res$contribution,
mode = "absolute",
coord_flip = TRUE) +
theme_Publication(base_size = 14)
dev.off()
pdf("SNV_signature_refit_COSMIC_contribution_heatmap.pdf",
width = 10,
height = 5)
plot_contribution_heatmap(fit_res_snv$fit_res$contribution,
cluster_samples = TRUE,
cluster_sigs = TRUE)
dev.off()
# similarity between samples at signature level
cos_sim_samples_signatures <- cos_sim_matrix(mut_mat_condition, COSMIC_signatures)
nmf_res_snv
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Vijg-lab/Projects/mutation\ accumulation/231009\ multiple\ ENU\ analysis/4-mutational-signatures/without-control-cells/signature/cell")
# get similarity between samples
# cos_sim_samples <- cos_sim_matrix(mut_mat_cell, mut_mat_cell)
#
# pdf("SNV_sample_cosine_heatmap.pdf",
#     width = 5,
#     height = 5)
# plot_cosine_heatmap(cos_sim_samples, cluster_rows = TRUE, cluster_cols = TRUE)
# dev.off()
# extract signatures
nmf_res_snv <- extract_signatures(mut_mat_cell,
rank = 2,
nrun = 1000,
nmf_type = "regular",
single_core = FALSE)
# name signatures
colnames(nmf_res_snv$signatures) <- c("SBSA", "SBSB")
rownames(nmf_res_snv$contribution) <- c("SBSA", "SBSB")
write.csv(nmf_res_snv, "nmf_res_snv.csv", quote = FALSE)
# plot profile
pdf("SNV_de_novo_signature_profile.pdf",
width = 7,
height = 4)
plot_96_profile(nmf_res_snv$signatures,
ymax= 0.06,
condensed = TRUE) +
scale_y_continuous(breaks = seq(0, 0.1, by = 0.01))
dev.off()
# compare original vs reconstructed
pdf("SNV_de_novo_signature_profile_reconstruction.pdf",
width = 5,
height = 5)
plot_original_vs_reconstructed(mut_mat_cell, nmf_res_snv$reconstructed,
y_intercept = 0.95)
dev.off()
# plot contribution
pdf("SNV_de_novo_profile_contribution_relative.pdf",
width = 4,
height = 5)
plot_contribution(nmf_res_snv$contribution,
nmf_res_snv$signature,
mode = "relative",
coord_flip = TRUE) +
theme_Publication(base_size = 14)
dev.off()
pdf("SNV_de_novo_profile_contribution_absolute.pdf",
width = 4,
height = 5)
plot_contribution(nmf_res_snv$contribution,
nmf_res_snv$signature,
mode = "absolute",
coord_flip = TRUE) +
theme_Publication(base_size = 14)
dev.off()
pdf("SNV_de_novo_profile_contribution_heatmap.pdf",
width = 5,
height = 5)
plot_contribution_heatmap(nmf_res_snv$contribution,
cluster_samples = TRUE,
cluster_sigs = TRUE)
dev.off()
# similarity between samples at signature level
cos_sim_samples_signatures <- cos_sim_matrix(mut_mat_cell, nmf_res_snv$signature)
pdf("SNV_de_novo_signature_cosine_heatmap.pdf",
width = 5,
height = 5)
plot_cosine_heatmap(cos_sim_samples_signatures,
cluster_rows = TRUE, cluster_cols = TRUE)
dev.off()
?plot_contribution
pdf("SNV_de_novo_profile_contribution_relative.pdf",
width = 4,
height = 5)
plot_contribution(nmf_res_snv$contribution,
nmf_res_snv$signature,
mode = "relative",
coord_flip = TRUE,
index = c(7:9, 13:15, 1:6, 10:12, 16:18)) +
theme_Publication(base_size = 14)
dev.off()
nmf_res_snv
# compare to known signatures
cosmic_signatures = get_known_signatures(muttype = "snv",
source = "COSMIC",
tissue_type = NULL,
incl_poss_artifacts = TRUE)
# SBSA
sbsa.cos_sim_all <- apply(cosmic_signatures, 2, function(x) cos_sim(x, nmf_res_snv$signatures[,"SBSA"]))
sbsa.cos_sim_all <- sbsa.cos_sim_all[order(sbsa.cos_sim_all, decreasing = TRUE)]
sbsa.cos_sim_all
colnames(nmf_res_snv$signatures) <- c("SBSB", "SBSA")
rownames(nmf_res_snv$contribution) <- c("SBSB", "SBSA")
write.csv(nmf_res_snv, "nmf_res_snv.csv", quote = FALSE)
pdf("SNV_de_novo_signature_profile.pdf",
width = 7,
height = 4)
plot_96_profile(nmf_res_snv$signatures,
ymax= 0.06,
condensed = TRUE) +
scale_y_continuous(breaks = seq(0, 0.1, by = 0.01))
dev.off()
# compare original vs reconstructed
pdf("SNV_de_novo_signature_profile_reconstruction.pdf",
width = 5,
height = 5)
plot_original_vs_reconstructed(mut_mat_cell, nmf_res_snv$reconstructed,
y_intercept = 0.95)
dev.off()
# plot contribution
pdf("SNV_de_novo_profile_contribution_relative.pdf",
width = 4,
height = 5)
plot_contribution(nmf_res_snv$contribution,
nmf_res_snv$signature,
mode = "relative",
coord_flip = TRUE,
index = c(7:9, 13:15, 1:6, 10:12, 16:18)) +
theme_Publication(base_size = 14)
dev.off()
pdf("SNV_de_novo_profile_contribution_absolute.pdf",
width = 4,
height = 5)
plot_contribution(nmf_res_snv$contribution,
nmf_res_snv$signature,
mode = "absolute",
coord_flip = TRUE) +
theme_Publication(base_size = 14)
dev.off()
pdf("SNV_de_novo_profile_contribution_heatmap.pdf",
width = 5,
height = 5)
plot_contribution_heatmap(nmf_res_snv$contribution,
cluster_samples = TRUE,
cluster_sigs = TRUE)
dev.off()
# similarity between samples at signature level
cos_sim_samples_signatures <- cos_sim_matrix(mut_mat_cell, nmf_res_snv$signature)
pdf("SNV_de_novo_signature_cosine_heatmap.pdf",
width = 5,
height = 5)
plot_cosine_heatmap(cos_sim_samples_signatures,
cluster_rows = TRUE, cluster_cols = TRUE)
dev.off()
cosmic_signatures = get_known_signatures(muttype = "snv",
source = "COSMIC",
tissue_type = NULL,
incl_poss_artifacts = TRUE)
# get cosine similarity of all COSMIC signatures to the denovo
# SBSA
sbsa.cos_sim_all <- apply(cosmic_signatures, 2, function(x) cos_sim(x, nmf_res_snv$signatures[,"SBSA"]))
sbsa.cos_sim_all <- sbsa.cos_sim_all[order(sbsa.cos_sim_all, decreasing = TRUE)]
sbsa.cos_sim_all
nmf_res_snv
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Vijg-lab/Projects/mutation\ accumulation/231009\ multiple\ ENU\ analysis/4-mutational-signatures/without-control-cells/signature/condition")
# get similarity between samples
# cos_sim_samples <- cos_sim_matrix(mut_mat_condition, mut_mat_condition)
#
# pdf("SNV_sample_cosine_heatmap.pdf",
#     width = 5,
#     height = 5)
# plot_cosine_heatmap(cos_sim_samples, cluster_rows = TRUE, cluster_cols = TRUE)
# dev.off()
# extract signatures
nmf_res_snv <- extract_signatures(mut_mat_condition,
rank = 2,
nrun = 1000,
nmf_type = "regular",
single_core = FALSE)
# name signatures
colnames(nmf_res_snv$signatures) <- c("SBSA", "SBSB")
rownames(nmf_res_snv$contribution) <- c("SBSA", "SBSB")
write.csv(nmf_res_snv, "nmf_res_snv.csv", quote = FALSE)
# plot profile
pdf("SNV_de_novo_signature_profile.pdf",
width = 7,
height = 4)
plot_96_profile(nmf_res_snv$signatures,
ymax= 0.06,
condensed = TRUE) +
scale_y_continuous(breaks = seq(0, 0.1, by = 0.01))
dev.off()
# compare original vs reconstructed
pdf("SNV_de_novo_signature_profile_reconstruction.pdf",
width = 5,
height = 5)
plot_original_vs_reconstructed(mut_mat_condition, nmf_res_snv$reconstructed,
y_intercept = 0.95)
dev.off()
# plot contribution
pdf("SNV_de_novo_profile_contribution_relative.pdf",
width = 4,
height = 5)
plot_contribution(nmf_res_snv$contribution,
nmf_res_snv$signature,
mode = "relative",
coord_flip = TRUE) +
theme_Publication(base_size = 14)
dev.off()
pdf("SNV_de_novo_profile_contribution_absolute.pdf",
width = 4,
height = 5)
plot_contribution(nmf_res_snv$contribution,
nmf_res_snv$signature,
mode = "absolute",
coord_flip = TRUE) +
theme_Publication(base_size = 14)
dev.off()
pdf("SNV_de_novo_profile_contribution_heatmap.pdf",
width = 5,
height = 5)
plot_contribution_heatmap(nmf_res_snv$contribution,
cluster_samples = TRUE,
cluster_sigs = TRUE)
dev.off()
# similarity between samples at signature level
cos_sim_samples_signatures <- cos_sim_matrix(mut_mat_condition, nmf_res_snv$signature)
pdf("SNV_de_novo_signature_cosine_heatmap.pdf",
width = 5,
height = 5)
plot_cosine_heatmap(cos_sim_samples_signatures,
cluster_rows = TRUE, cluster_cols = TRUE)
dev.off()
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Vijg-lab/Projects/mutation\ accumulation/annotation/rna")
# rna expression table
rna <- read.table("ENCFF245ZOB-IMR90-total-RNA-seq-hg19.tsv", header = TRUE)
# remove version from ensemble gene id
rna$gene_id <- gsub("\\..*", "", rna$gene_id)
# plot TPM distribution
nrow(rna)
hist(log2(rna$TPM))
# zFPKM calculation
zfpkm <- zFPKM(rna[,"TPM", drop = FALSE])
zFPKMPlot(rna[,"TPM", drop = FALSE])
# plot zfpkm  distribution
hist(zfpkm$TPM)
# keep genes with > -3 zfpkm
rna.filter <- rna[zfpkm$TPM > -3,]
# plot filtered TPM distribution
nrow(rna.filter)
hist(log2(rna.filter$TPM))
# get entrz id
ensembl <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
gene_names <- getBM(attributes = c('ensembl_gene_id', 'external_gene_name', 'entrezgene_id'),
filters = 'ensembl_gene_id',
values = rna$gene_id,
mart = ensembl)
rna.filter <- merge(rna.filter, gene_names, by.x = "gene_id", by.y = "ensembl_gene_id")
sum(duplicated(rna.filter$entrezgene_id))
rna.filter <- rna.filter[!duplicated(rna.filter$entrezgene_id),] # remove duplicates
nmf_res_snv$signatures
mut_mat_condition
# get the ratio of “stop gain”, “mismatch”, “synonymous” and “splice site” mutations can be determined per genomic context
contexts <- rownames(mut_mat_condition)
contexts
rna.filter$entrezgene_id
?context_potential_damage_analysis
nmf_res_snv$signatures
nmf_res_snv
cosmic_signatures
signal_signatures
# compare to known signatures
signal_signatures = get_known_signatures(muttype = "snv",
source = "SIGNAL",
tissue_type = NULL,
sig_type = "exposure",
incl_poss_artifacts = TRUE)
# get the ratios per signature
signatures <- cbind(cosmic_signatures[,"SBS5", "SBS40"], signal_signatures[,"ENU..400.uM."])
signal_signatures[,"ENU..400.uM."]
cosmic_signatures[,"SBS5", "SBS40"]
cosmic_signatures[,c("SBS5", "SBS40")]
signal_signatures[,"ENU..400.uM.", drop = FALSE]
# get the ratios per signature
signatures <- cbind(cosmic_signatures[,c("SBS5", "SBS40")], signal_signatures[,"ENU..400.uM.", drop = FALSE])
contexts <- rownames(mut_mat_condition)
context_mismatches <- context_potential_damage_analysis(contexts, TxDb.Hsapiens.UCSC.hg19.knownGene, BSgenome.Hsapiens.UCSC.hg19, rna.filter$entrezgene_id, verbose = TRUE)
# get the ratios per signature
signatures <- cbind(cosmic_signatures[,c("SBS5", "SBS40")], signal_signatures[,"ENU..400.uM.", drop = FALSE])
sig_damage <- signature_potential_damage_analysis(signatures, contexts, context_mismatches)
setwd("/Users/ronaldcutler/Dropbox\ (EinsteinMed)/Vijg-lab/Projects/mutation\ accumulation/231009\ multiple\ ENU\ analysis/4-mutational-signatures/without-control-cells/signature/condition")
write.csv(sig_damage, "fitted_sig_potential_damage.csv", row.names = FALSE)
write.csv(context_mismatches, "context_mismatches_potential_damage.csv", row.names = FALSE)
